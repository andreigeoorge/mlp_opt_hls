// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _d_sigmoid_HH_
#define _d_sigmoid_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "d_sigmoid_dsub_64bkb.h"
#include "d_sigmoid_dmul_64cud.h"

namespace ap_rtl {

struct d_sigmoid : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > layer_input_address0;
    sc_out< sc_logic > layer_input_ce0;
    sc_out< sc_logic > layer_input_we0;
    sc_out< sc_lv<64> > layer_input_d0;
    sc_in< sc_lv<64> > layer_input_q0;
    sc_out< sc_lv<3> > layer_input_address1;
    sc_out< sc_logic > layer_input_ce1;
    sc_out< sc_logic > layer_input_we1;
    sc_out< sc_lv<64> > layer_input_d1;
    sc_in< sc_lv<64> > layer_input_q1;
    sc_out< sc_lv<3> > layer_output_address0;
    sc_out< sc_logic > layer_output_ce0;
    sc_in< sc_lv<64> > layer_output_q0;
    sc_out< sc_lv<3> > layer_output_address1;
    sc_out< sc_logic > layer_output_ce1;
    sc_in< sc_lv<64> > layer_output_q1;
    sc_out< sc_lv<3> > layer_derivative_address0;
    sc_out< sc_logic > layer_derivative_ce0;
    sc_out< sc_logic > layer_derivative_we0;
    sc_out< sc_lv<64> > layer_derivative_d0;
    sc_out< sc_lv<3> > layer_derivative_address1;
    sc_out< sc_logic > layer_derivative_ce1;
    sc_out< sc_logic > layer_derivative_we1;
    sc_out< sc_lv<64> > layer_derivative_d1;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const0;


    // Module declarations
    d_sigmoid(sc_module_name name);
    SC_HAS_PROCESS(d_sigmoid);

    ~d_sigmoid();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    d_sigmoid_dsub_64bkb<1,5,64,64,64>* d_sigmoid_dsub_64bkb_U1;
    d_sigmoid_dsub_64bkb<1,5,64,64,64>* d_sigmoid_dsub_64bkb_U2;
    d_sigmoid_dmul_64cud<1,5,64,64,64>* d_sigmoid_dmul_64cud_U3;
    d_sigmoid_dmul_64cud<1,5,64,64,64>* d_sigmoid_dmul_64cud_U4;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_206_p2;
    sc_signal< sc_lv<64> > reg_214;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > grp_fu_210_p2;
    sc_signal< sc_lv<64> > reg_219;
    sc_signal< sc_lv<64> > layer_output_load_reg_234;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > layer_output_load_1_reg_240;
    sc_signal< sc_lv<64> > layer_output_load_2_reg_256;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > layer_output_load_3_reg_262;
    sc_signal< sc_lv<64> > layer_output_load_4_reg_278;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > layer_output_load_5_reg_284;
    sc_signal< sc_lv<64> > layer_output_load_6_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > layer_output_load_7_reg_306;
    sc_signal< sc_lv<64> > grp_fu_194_p2;
    sc_signal< sc_lv<64> > tmp_reg_312;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > grp_fu_200_p2;
    sc_signal< sc_lv<64> > tmp_s_reg_317;
    sc_signal< sc_lv<64> > tmp_2_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_3_reg_327;
    sc_signal< sc_lv<64> > tmp_4_reg_332;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_5_reg_337;
    sc_signal< sc_lv<64> > tmp_6_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > tmp_7_reg_347;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > grp_fu_206_p0;
    sc_signal< sc_lv<64> > grp_fu_206_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > grp_fu_210_p0;
    sc_signal< sc_lv<64> > grp_fu_210_p1;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_206_p0();
    void thread_grp_fu_206_p1();
    void thread_grp_fu_210_p0();
    void thread_grp_fu_210_p1();
    void thread_layer_derivative_address0();
    void thread_layer_derivative_address1();
    void thread_layer_derivative_ce0();
    void thread_layer_derivative_ce1();
    void thread_layer_derivative_d0();
    void thread_layer_derivative_d1();
    void thread_layer_derivative_we0();
    void thread_layer_derivative_we1();
    void thread_layer_input_address0();
    void thread_layer_input_address1();
    void thread_layer_input_ce0();
    void thread_layer_input_ce1();
    void thread_layer_input_d0();
    void thread_layer_input_d1();
    void thread_layer_input_we0();
    void thread_layer_input_we1();
    void thread_layer_output_address0();
    void thread_layer_output_address1();
    void thread_layer_output_ce0();
    void thread_layer_output_ce1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
